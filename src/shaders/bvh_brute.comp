
#version 450

#extension GL_ARB_separate_shader_objects : enable
#extension GL_GOOGLE_include_directive : enable

#include "bvhcommon.glsl"

void traverse_cpq(vec3 q, inout vec3 closest, inout float best_dist) {
    for (int t = 0; t < n_tris; t++) {
        vec3 p = cp_triangle(q, triangles[t]);
        float dt = length(p-q);
        if(dt < best_dist) {
            best_dist = dt;
            closest = p;
        }
    }
}

void traverse_ray(vec3 o, vec3 d, inout vec3 hit, inout float best_dist) {
    for (int t = 0; t < n_tris; t++) {
        vec3 hitp;
        float hitd;
        bool h = hit_triangle(o, d, hitp, hitd, triangles[t]);
        if(h && hitd < best_dist) {
            best_dist = hitd;
            hit = hitp;
        }
    }
}
