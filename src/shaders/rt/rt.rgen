
#version 460
#extension GL_GOOGLE_include_directive : enable

#include "rtcommon.glsl"

// ray info
layout(location = 0) rayPayloadEXT vec3 payload;

// IO
layout(binding = 0) uniform UniformBufferObject {
    mat4 V, P, iV, iP;
} cam;

layout(binding = 5) uniform accelerationStructureEXT topLevelAS;
layout(binding = 6, rgba32f) uniform image2D image;

void main() {

    const vec2 pixelCenter = vec2(gl_LaunchIDEXT.xy) + vec2(0.5);
    const vec2 inUV = pixelCenter / vec2(gl_LaunchSizeEXT.xy);
    const vec2 s = inUV * 2.0 - 1.0;

    vec4 origin    = cam.iV * vec4(0, 0, 0, 1);
    vec4 target    = cam.iP * vec4(s, 0, 1);
    vec4 direction = cam.iV * vec4(target.xyz, 0);

    vec3 o = origin.xyz;
    vec3 d = normalize(direction.xyz);

    payload = vec3(0);

    traceRayEXT(topLevelAS,     // acceleration structure
        gl_RayFlagsOpaqueEXT,   // rayFlags
        0xFF,                   // cullMask
        0,                      // sbtRecordOffset
        0,                      // sbtRecordStride
        0,                      // missIndex
        o,                      // ray origin
        0.001,                  // ray min range
        d,                      // ray direction
        10000.0,                // ray max range
        0                       // payload (location = 0)
    );

    imageStore(image, ivec2(gl_LaunchIDEXT.xy), vec4(payload, 1.0));
}
